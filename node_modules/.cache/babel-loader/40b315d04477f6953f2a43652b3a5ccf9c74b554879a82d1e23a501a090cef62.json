{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nancy\\\\ultra-modern-clock\\\\src\\\\Components\\\\WorldClock.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment-timezone\";\nimport \"./WorldClock.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorldClock = () => {\n  _s();\n  const [timeZones, setTimeZones] = useState([]);\n  const [selectedTimeZones, setSelectedTimeZones] = useState([]);\n  const [currentTime, setCurrentTime] = useState({});\n  const [offsets, setOffsets] = useState({});\n  const [dayNight, setDayNight] = useState({});\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    const zones = moment.tz.names();\n    setTimeZones(zones);\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const currentTimeObj = {};\n      const offsetsObj = {};\n      const dayNightObj = {};\n      selectedTimeZones.forEach(zone => {\n        const currentTime = moment.tz(zone).format(\"HH:mm:ss\");\n        const offset = moment.tz(zone).utcOffset() / 60;\n        const isDay = moment.tz(zone).hour() >= 6 && moment.tz(zone).hour() < 18;\n        currentTimeObj[zone] = currentTime;\n        offsetsObj[zone] = offset;\n        dayNightObj[zone] = isDay ? \"day\" : \"night\";\n      });\n      setCurrentTime(currentTimeObj);\n      setOffsets(offsetsObj);\n      setDayNight(dayNightObj);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [selectedTimeZones]);\n  const handleTimeZoneSelect = zone => {\n    if (!selectedTimeZones.includes(zone)) {\n      setSelectedTimeZones([...selectedTimeZones, zone]);\n    }\n  };\n  const handleTimeZoneRemove = zone => {\n    setSelectedTimeZones(selectedTimeZones.filter(z => z !== zone));\n  };\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n  };\n  const filteredTimeZones = timeZones.filter(zone => zone.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"world-clock\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"World Clock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Search Timezones\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"timezone-dropdown\",\n      children: filteredTimeZones.map(zone => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleTimeZoneSelect(zone),\n        children: zone\n      }, zone, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: selectedTimeZones.map(zone => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"timezone-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timezone-name\",\n          children: zone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timezone-time\",\n          children: currentTime[zone]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timezone-offset\",\n          children: offsets[zone] > 0 ? `+${offsets[zone]} hours` : `${offsets[zone]} hours`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `timezone-day-night ${dayNight[zone]}`,\n          children: dayNight[zone] === \"day\" ? \"ðŸŒž\" : \"ðŸŒœ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTimeZoneRemove(zone),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, zone, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(WorldClock, \"XkVCjOKVoCclQgU++xHNBc/iqrw=\");\n_c = WorldClock;\nexport default WorldClock;\nvar _c;\n$RefreshReg$(_c, \"WorldClock\");","map":{"version":3,"names":["React","useState","useEffect","moment","jsxDEV","_jsxDEV","WorldClock","_s","timeZones","setTimeZones","selectedTimeZones","setSelectedTimeZones","currentTime","setCurrentTime","offsets","setOffsets","dayNight","setDayNight","searchTerm","setSearchTerm","zones","tz","names","interval","setInterval","currentTimeObj","offsetsObj","dayNightObj","forEach","zone","format","offset","utcOffset","isDay","hour","clearInterval","handleTimeZoneSelect","includes","handleTimeZoneRemove","filter","z","handleSearch","e","target","value","filteredTimeZones","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Nancy/ultra-modern-clock/src/Components/WorldClock.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment-timezone\";\r\nimport \"./WorldClock.css\";\r\n\r\nconst WorldClock = () => {\r\n  const [timeZones, setTimeZones] = useState([]);\r\n  const [selectedTimeZones, setSelectedTimeZones] = useState([]);\r\n  const [currentTime, setCurrentTime] = useState({});\r\n  const [offsets, setOffsets] = useState({});\r\n  const [dayNight, setDayNight] = useState({});\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const zones = moment.tz.names();\r\n    setTimeZones(zones);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const currentTimeObj = {};\r\n      const offsetsObj = {};\r\n      const dayNightObj = {};\r\n      selectedTimeZones.forEach((zone) => {\r\n        const currentTime = moment.tz(zone).format(\"HH:mm:ss\");\r\n        const offset = moment.tz(zone).utcOffset() / 60;\r\n        const isDay =\r\n          moment.tz(zone).hour() >= 6 && moment.tz(zone).hour() < 18;\r\n        currentTimeObj[zone] = currentTime;\r\n        offsetsObj[zone] = offset;\r\n        dayNightObj[zone] = isDay ? \"day\" : \"night\";\r\n      });\r\n      setCurrentTime(currentTimeObj);\r\n      setOffsets(offsetsObj);\r\n      setDayNight(dayNightObj);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [selectedTimeZones]);\r\n\r\n  const handleTimeZoneSelect = (zone) => {\r\n    if (!selectedTimeZones.includes(zone)) {\r\n      setSelectedTimeZones([...selectedTimeZones, zone]);\r\n    }\r\n  };\r\n\r\n  const handleTimeZoneRemove = (zone) => {\r\n    setSelectedTimeZones(selectedTimeZones.filter((z) => z !== zone));\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const filteredTimeZones = timeZones.filter((zone) =>\r\n    zone.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"world-clock\">\r\n      <h2>World Clock</h2>\r\n      <input\r\n        type=\"search\"\r\n        placeholder=\"Search Timezones\"\r\n        value={searchTerm}\r\n        onChange={handleSearch}\r\n      />\r\n      {searchTerm && (\r\n        <ul className=\"timezone-dropdown\">\r\n          {filteredTimeZones.map((zone) => (\r\n            <li key={zone} onClick={() => handleTimeZoneSelect(zone)}>\r\n              {zone}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <ul>\r\n        {selectedTimeZones.map((zone) => (\r\n          <li key={zone} className=\"timezone-card\">\r\n            <span className=\"timezone-name\">{zone}</span>\r\n            <span className=\"timezone-time\">{currentTime[zone]}</span>\r\n            <span className=\"timezone-offset\">\r\n              {offsets[zone] > 0\r\n                ? `+${offsets[zone]} hours`\r\n                : `${offsets[zone]} hours`}\r\n            </span>\r\n            <span className={`timezone-day-night ${dayNight[zone]}`}>\r\n              {dayNight[zone] === \"day\" ? \"ðŸŒž\" : \"ðŸŒœ\"}\r\n            </span>\r\n            <button onClick={() => handleTimeZoneRemove(zone)}>Remove</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorldClock;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}