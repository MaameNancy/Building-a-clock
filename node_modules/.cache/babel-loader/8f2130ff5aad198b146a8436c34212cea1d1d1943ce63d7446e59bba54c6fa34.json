{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function WorldClock(){const[timeZones,setTimeZones]=useState([]);const[selectedTimeZone,setSelectedTimeZone]=useState(\"\");useEffect(()=>{fetch(\"https://worldtimeapi.org/api/timezone\").then(response=>response.json()).then(data=>setTimeZones(data));},[]);const handleTimeZoneChange=e=>{setSelectedTimeZone(e.target.value);};const currentTime=()=>{if(selectedTimeZone){fetch(\"https://worldtimeapi.org/api/timezone/\".concat(selectedTimeZone)).then(response=>response.json()).then(data=>console.log(data.current_time));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"world-clock-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"World Clock\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedTimeZone,onChange:handleTimeZoneChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a time zone\"}),timeZones.map(timeZone=>/*#__PURE__*/_jsx(\"option\",{value:timeZone,children:timeZone},timeZone))]}),/*#__PURE__*/_jsx(\"button\",{onClick:currentTime,children:\"Get current time\"})]});}export default WorldClock;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","WorldClock","timeZones","setTimeZones","selectedTimeZone","setSelectedTimeZone","fetch","then","response","json","data","handleTimeZoneChange","e","target","value","currentTime","concat","console","log","current_time","className","children","onChange","map","timeZone","onClick"],"sources":["C:/Users/Nancy/ultra-modern-clock/src/Components/WorldClock.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction WorldClock() {\r\n  const [timeZones, setTimeZones] = useState([]);\r\n  const [selectedTimeZone, setSelectedTimeZone] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://worldtimeapi.org/api/timezone\")\r\n      .then((response) => response.json())\r\n      .then((data) => setTimeZones(data));\r\n  }, []);\r\n\r\n  const handleTimeZoneChange = (e) => {\r\n    setSelectedTimeZone(e.target.value);\r\n  };\r\n\r\n  const currentTime = () => {\r\n    if (selectedTimeZone) {\r\n      fetch(`https://worldtimeapi.org/api/timezone/${selectedTimeZone}`)\r\n        .then((response) => response.json())\r\n        .then((data) => console.log(data.current_time));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"world-clock-container\">\r\n      <h1>World Clock</h1>\r\n      <select value={selectedTimeZone} onChange={handleTimeZoneChange}>\r\n        <option value=\"\">Select a time zone</option>\r\n        {timeZones.map((timeZone) => (\r\n          <option key={timeZone} value={timeZone}>\r\n            {timeZone}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button onClick={currentTime}>Get current time</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorldClock;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,QAAS,CAAAC,UAAUA,CAAA,CAAG,CACpB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACS,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAE5DC,SAAS,CAAC,IAAM,CACdU,KAAK,CAAC,uCAAuC,CAAC,CAC3CC,IAAI,CAAEC,QAAQ,EAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,EAAKP,YAAY,CAACO,IAAI,CAAC,CAAC,CACvC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,oBAAoB,CAAIC,CAAC,EAAK,CAClCP,mBAAmB,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACrC,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,GAAIX,gBAAgB,CAAE,CACpBE,KAAK,0CAAAU,MAAA,CAA0CZ,gBAAgB,CAAE,CAAC,CAC/DG,IAAI,CAAEC,QAAQ,EAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,EAAKO,OAAO,CAACC,GAAG,CAACR,IAAI,CAACS,YAAY,CAAC,CAAC,CACnD,CACF,CAAC,CAED,mBACEnB,KAAA,QAAKoB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpCvB,IAAA,OAAAuB,QAAA,CAAI,aAAW,CAAI,CAAC,cACpBrB,KAAA,WAAQc,KAAK,CAAEV,gBAAiB,CAACkB,QAAQ,CAAEX,oBAAqB,CAAAU,QAAA,eAC9DvB,IAAA,WAAQgB,KAAK,CAAC,EAAE,CAAAO,QAAA,CAAC,oBAAkB,CAAQ,CAAC,CAC3CnB,SAAS,CAACqB,GAAG,CAAEC,QAAQ,eACtB1B,IAAA,WAAuBgB,KAAK,CAAEU,QAAS,CAAAH,QAAA,CACpCG,QAAQ,EADEA,QAEL,CACT,CAAC,EACI,CAAC,cACT1B,IAAA,WAAQ2B,OAAO,CAAEV,WAAY,CAAAM,QAAA,CAAC,kBAAgB,CAAQ,CAAC,EACpD,CAAC,CAEV,CAEA,cAAe,CAAApB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}