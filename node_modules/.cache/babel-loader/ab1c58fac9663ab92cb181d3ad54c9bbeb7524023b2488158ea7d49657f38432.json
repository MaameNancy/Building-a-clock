{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import moment from\"moment-timezone\";import\"./WorldClock.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WorldClock=()=>{const[timeZones,setTimeZones]=useState([]);const[selectedTimeZones,setSelectedTimeZones]=useState([]);const[currentTime,setCurrentTime]=useState({});const[offsets,setOffsets]=useState({});const[dayNight,setDayNight]=useState({});const[searchTerm,setSearchTerm]=useState(\"\");useEffect(()=>{const zones=moment.tz.names();setTimeZones(zones);},[]);useEffect(()=>{const interval=setInterval(()=>{const currentTimeObj={};const offsetsObj={};const dayNightObj={};selectedTimeZones.forEach(zone=>{const currentTime=moment.tz(zone).format(\"HH:mm:ss\");const offset=moment.tz(zone).utcOffset()/60;const isDay=moment.tz(zone).hour()>=6&&moment.tz(zone).hour()<18;currentTimeObj[zone]=currentTime;offsetsObj[zone]=offset;dayNightObj[zone]=isDay?\"day\":\"night\";});setCurrentTime(currentTimeObj);setOffsets(offsetsObj);setDayNight(dayNightObj);},1000);return()=>clearInterval(interval);},[selectedTimeZones]);const handleTimeZoneSelect=zone=>{if(!selectedTimeZones.includes(zone)){setSelectedTimeZones([...selectedTimeZones,zone]);}};const handleTimeZoneRemove=zone=>{setSelectedTimeZones(selectedTimeZones.filter(z=>z!==zone));};const handleSearch=e=>{setSearchTerm(e.target.value);};const filteredTimeZones=timeZones.filter(zone=>zone.toLowerCase().includes(searchTerm.toLowerCase()));return/*#__PURE__*/_jsxs(\"div\",{className:\"world-clock\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"World Clock\"}),/*#__PURE__*/_jsx(\"input\",{type:\"search\",placeholder:\"Search Timezones\",value:searchTerm,onChange:handleSearch}),searchTerm&&/*#__PURE__*/_jsx(\"ul\",{className:\"timezone-dropdown\",children:filteredTimeZones.map(zone=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>handleTimeZoneSelect(zone),children:zone},zone))}),/*#__PURE__*/_jsx(\"ul\",{children:selectedTimeZones.map(zone=>/*#__PURE__*/_jsxs(\"li\",{className:\"timezone-card\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"timezone-name\",children:zone}),/*#__PURE__*/_jsx(\"span\",{className:\"timezone-time\",children:currentTime[zone]}),/*#__PURE__*/_jsx(\"span\",{className:\"timezone-offset\",children:offsets[zone]>0?\"+\".concat(offsets[zone],\" hours\"):\"\".concat(offsets[zone],\" hours\")}),/*#__PURE__*/_jsx(\"span\",{className:\"timezone-day-night \".concat(dayNight[zone]),children:dayNight[zone]===\"day\"?\"ðŸŒž\":\"ðŸŒœ\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleTimeZoneRemove(zone),children:\"Remove\"})]},zone))})]});};export default WorldClock;","map":{"version":3,"names":["React","useState","useEffect","moment","jsx","_jsx","jsxs","_jsxs","WorldClock","timeZones","setTimeZones","selectedTimeZones","setSelectedTimeZones","currentTime","setCurrentTime","offsets","setOffsets","dayNight","setDayNight","searchTerm","setSearchTerm","zones","tz","names","interval","setInterval","currentTimeObj","offsetsObj","dayNightObj","forEach","zone","format","offset","utcOffset","isDay","hour","clearInterval","handleTimeZoneSelect","includes","handleTimeZoneRemove","filter","z","handleSearch","e","target","value","filteredTimeZones","toLowerCase","className","children","type","placeholder","onChange","map","onClick","concat"],"sources":["C:/Users/Nancy/ultra-modern-clock/src/Components/WorldClock.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment-timezone\";\r\nimport \"./WorldClock.css\";\r\n\r\nconst WorldClock = () => {\r\n  const [timeZones, setTimeZones] = useState([]);\r\n  const [selectedTimeZones, setSelectedTimeZones] = useState([]);\r\n  const [currentTime, setCurrentTime] = useState({});\r\n  const [offsets, setOffsets] = useState({});\r\n  const [dayNight, setDayNight] = useState({});\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const zones = moment.tz.names();\r\n    setTimeZones(zones);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const currentTimeObj = {};\r\n      const offsetsObj = {};\r\n      const dayNightObj = {};\r\n      selectedTimeZones.forEach((zone) => {\r\n        const currentTime = moment.tz(zone).format(\"HH:mm:ss\");\r\n        const offset = moment.tz(zone).utcOffset() / 60;\r\n        const isDay =\r\n          moment.tz(zone).hour() >= 6 && moment.tz(zone).hour() < 18;\r\n        currentTimeObj[zone] = currentTime;\r\n        offsetsObj[zone] = offset;\r\n        dayNightObj[zone] = isDay ? \"day\" : \"night\";\r\n      });\r\n      setCurrentTime(currentTimeObj);\r\n      setOffsets(offsetsObj);\r\n      setDayNight(dayNightObj);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [selectedTimeZones]);\r\n\r\n  const handleTimeZoneSelect = (zone) => {\r\n    if (!selectedTimeZones.includes(zone)) {\r\n      setSelectedTimeZones([...selectedTimeZones, zone]);\r\n    }\r\n  };\r\n\r\n  const handleTimeZoneRemove = (zone) => {\r\n    setSelectedTimeZones(selectedTimeZones.filter((z) => z !== zone));\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const filteredTimeZones = timeZones.filter((zone) =>\r\n    zone.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"world-clock\">\r\n      <h2>World Clock</h2>\r\n      <input\r\n        type=\"search\"\r\n        placeholder=\"Search Timezones\"\r\n        value={searchTerm}\r\n        onChange={handleSearch}\r\n      />\r\n      {searchTerm && (\r\n        <ul className=\"timezone-dropdown\">\r\n          {filteredTimeZones.map((zone) => (\r\n            <li key={zone} onClick={() => handleTimeZoneSelect(zone)}>\r\n              {zone}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <ul>\r\n        {selectedTimeZones.map((zone) => (\r\n          <li key={zone} className=\"timezone-card\">\r\n            <span className=\"timezone-name\">{zone}</span>\r\n            <span className=\"timezone-time\">{currentTime[zone]}</span>\r\n            <span className=\"timezone-offset\">\r\n              {offsets[zone] > 0\r\n                ? `+${offsets[zone]} hours`\r\n                : `${offsets[zone]} hours`}\r\n            </span>\r\n            <span className={`timezone-day-night ${dayNight[zone]}`}>\r\n              {dayNight[zone] === \"day\" ? \"ðŸŒž\" : \"ðŸŒœ\"}\r\n            </span>\r\n            <button onClick={() => handleTimeZoneRemove(zone)}>Remove</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorldClock;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}